@page "/register"
@using TaskArchitect.Models
@using TaskArchitect.Services
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<h2>Register</h2>

<EditForm Model="@registerModel" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="registerModel.Username" class="form-control" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="registerModel.Email" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="registerModel.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private async System.Threading.Tasks.Task HandleRegistration()
    {
        var result = await AuthService.Register(registerModel);
        if (result.Success)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            // Handle registration error
            // Display an error message to the user
            // You can use a Blazor component like MatSnackbar or MatToast to show the error
        }
    }
}